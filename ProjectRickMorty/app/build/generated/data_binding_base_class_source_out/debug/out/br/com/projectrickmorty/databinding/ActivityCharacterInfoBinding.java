// Generated by view binder compiler. Do not edit!
package br.com.projectrickmorty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.projectrickmorty.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCharacterInfoBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView bolinhaStatusInfo;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageButton botaoLocalAnterior;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageButton botaoProximoLocal;

  @NonNull
  public final TextView characterInfoGenero;

  @NonNull
  public final ImageView characterInfoImageview;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   */
  @Nullable
  public final TextView characterInfoLabelGenero;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   */
  @Nullable
  public final TextView characterInfoLabelLocal;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   */
  @Nullable
  public final TextView characterInfoLabelName;

  @NonNull
  public final TextView characterInfoLabelOrigem;

  @NonNull
  public final TextView characterInfoLabelSpecie;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   */
  @Nullable
  public final TextView characterInfoLabelStatus;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   */
  @Nullable
  public final TextView characterInfoLabelTipo;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   */
  @Nullable
  public final TextView characterInfoLocal;

  @NonNull
  public final TextView characterInfoName;

  @NonNull
  public final TextView characterInfoOrigem;

  @NonNull
  public final TextView characterInfoSpecie;

  @NonNull
  public final TextView characterInfoStatus;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   */
  @Nullable
  public final TextView characterInfoTipo;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final Guideline guidelineEpisodeInfo;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View linhaLayout1;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View linhaLayout2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View linhaLayout3;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-v31/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View linhaLayout4;

  private ActivityCharacterInfoBinding(@NonNull View rootView,
      @Nullable ImageView bolinhaStatusInfo, @Nullable ImageButton botaoLocalAnterior,
      @Nullable ImageButton botaoProximoLocal, @NonNull TextView characterInfoGenero,
      @NonNull ImageView characterInfoImageview, @Nullable TextView characterInfoLabelGenero,
      @Nullable TextView characterInfoLabelLocal, @Nullable TextView characterInfoLabelName,
      @NonNull TextView characterInfoLabelOrigem, @NonNull TextView characterInfoLabelSpecie,
      @Nullable TextView characterInfoLabelStatus, @Nullable TextView characterInfoLabelTipo,
      @Nullable TextView characterInfoLocal, @NonNull TextView characterInfoName,
      @NonNull TextView characterInfoOrigem, @NonNull TextView characterInfoSpecie,
      @NonNull TextView characterInfoStatus, @Nullable TextView characterInfoTipo,
      @Nullable Guideline guidelineEpisodeInfo, @Nullable View linhaLayout1,
      @Nullable View linhaLayout2, @Nullable View linhaLayout3, @Nullable View linhaLayout4) {
    this.rootView = rootView;
    this.bolinhaStatusInfo = bolinhaStatusInfo;
    this.botaoLocalAnterior = botaoLocalAnterior;
    this.botaoProximoLocal = botaoProximoLocal;
    this.characterInfoGenero = characterInfoGenero;
    this.characterInfoImageview = characterInfoImageview;
    this.characterInfoLabelGenero = characterInfoLabelGenero;
    this.characterInfoLabelLocal = characterInfoLabelLocal;
    this.characterInfoLabelName = characterInfoLabelName;
    this.characterInfoLabelOrigem = characterInfoLabelOrigem;
    this.characterInfoLabelSpecie = characterInfoLabelSpecie;
    this.characterInfoLabelStatus = characterInfoLabelStatus;
    this.characterInfoLabelTipo = characterInfoLabelTipo;
    this.characterInfoLocal = characterInfoLocal;
    this.characterInfoName = characterInfoName;
    this.characterInfoOrigem = characterInfoOrigem;
    this.characterInfoSpecie = characterInfoSpecie;
    this.characterInfoStatus = characterInfoStatus;
    this.characterInfoTipo = characterInfoTipo;
    this.guidelineEpisodeInfo = guidelineEpisodeInfo;
    this.linhaLayout1 = linhaLayout1;
    this.linhaLayout2 = linhaLayout2;
    this.linhaLayout3 = linhaLayout3;
    this.linhaLayout4 = linhaLayout4;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCharacterInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCharacterInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_character_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCharacterInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bolinha_status_info;
      ImageView bolinhaStatusInfo = ViewBindings.findChildViewById(rootView, id);

      id = R.id.botao_local_anterior;
      ImageButton botaoLocalAnterior = ViewBindings.findChildViewById(rootView, id);

      id = R.id.botao_proximo_local;
      ImageButton botaoProximoLocal = ViewBindings.findChildViewById(rootView, id);

      id = R.id.character_info_genero;
      TextView characterInfoGenero = ViewBindings.findChildViewById(rootView, id);
      if (characterInfoGenero == null) {
        break missingId;
      }

      id = R.id.character_info_imageview;
      ImageView characterInfoImageview = ViewBindings.findChildViewById(rootView, id);
      if (characterInfoImageview == null) {
        break missingId;
      }

      id = R.id.character_info_label_genero;
      TextView characterInfoLabelGenero = ViewBindings.findChildViewById(rootView, id);

      id = R.id.character_info_label_local;
      TextView characterInfoLabelLocal = ViewBindings.findChildViewById(rootView, id);

      id = R.id.character_info_label_name;
      TextView characterInfoLabelName = ViewBindings.findChildViewById(rootView, id);

      id = R.id.character_info_label_origem;
      TextView characterInfoLabelOrigem = ViewBindings.findChildViewById(rootView, id);
      if (characterInfoLabelOrigem == null) {
        break missingId;
      }

      id = R.id.character_info_label_specie;
      TextView characterInfoLabelSpecie = ViewBindings.findChildViewById(rootView, id);
      if (characterInfoLabelSpecie == null) {
        break missingId;
      }

      id = R.id.character_info_label_status;
      TextView characterInfoLabelStatus = ViewBindings.findChildViewById(rootView, id);

      id = R.id.character_info_label_tipo;
      TextView characterInfoLabelTipo = ViewBindings.findChildViewById(rootView, id);

      id = R.id.character_info_local;
      TextView characterInfoLocal = ViewBindings.findChildViewById(rootView, id);

      id = R.id.character_info_name;
      TextView characterInfoName = ViewBindings.findChildViewById(rootView, id);
      if (characterInfoName == null) {
        break missingId;
      }

      id = R.id.character_info_origem;
      TextView characterInfoOrigem = ViewBindings.findChildViewById(rootView, id);
      if (characterInfoOrigem == null) {
        break missingId;
      }

      id = R.id.character_info_specie;
      TextView characterInfoSpecie = ViewBindings.findChildViewById(rootView, id);
      if (characterInfoSpecie == null) {
        break missingId;
      }

      id = R.id.character_info_status;
      TextView characterInfoStatus = ViewBindings.findChildViewById(rootView, id);
      if (characterInfoStatus == null) {
        break missingId;
      }

      id = R.id.character_info_tipo;
      TextView characterInfoTipo = ViewBindings.findChildViewById(rootView, id);

      id = R.id.guideline_episodeInfo;
      Guideline guidelineEpisodeInfo = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linha_layout_1;
      View linhaLayout1 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linha_layout_2;
      View linhaLayout2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linha_layout_3;
      View linhaLayout3 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linha_layout_4;
      View linhaLayout4 = ViewBindings.findChildViewById(rootView, id);

      return new ActivityCharacterInfoBinding(rootView, bolinhaStatusInfo, botaoLocalAnterior,
          botaoProximoLocal, characterInfoGenero, characterInfoImageview, characterInfoLabelGenero,
          characterInfoLabelLocal, characterInfoLabelName, characterInfoLabelOrigem,
          characterInfoLabelSpecie, characterInfoLabelStatus, characterInfoLabelTipo,
          characterInfoLocal, characterInfoName, characterInfoOrigem, characterInfoSpecie,
          characterInfoStatus, characterInfoTipo, guidelineEpisodeInfo, linhaLayout1, linhaLayout2,
          linhaLayout3, linhaLayout4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
